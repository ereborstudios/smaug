name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: "Create Release"

    runs-on: "ubuntu-latest"

    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}

    steps:
    - name: release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  upload-release:
    name: "Tagged Release"

    needs: create-release

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            name: linux
            bin: smaug
          - os: macos-latest
            name: mac
            bin: smaug
          - os: windows-latest
            name: windows.exe
            bin: smaug.exe

    runs-on: ${{matrix.os }}

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: clippy
    - uses: actions/checkout@v2
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -- -D warnings
    - name: Run tests
      run: cargo test --verbose
    - name: build
      run: cargo build --release --locked
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: target/release/${{matrix.bin}}
        asset_name: smaug-${{matrix.name}}
        asset_content_type: application/octet-stream

  aur-publish:
    runs-on: ubuntu-latest
    needs: upload-release

    steps:
      - uses: actions/checkout@v2

      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@<TAG>
        with:
          pkgname: smaug
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,dsa,ecdsa,ed25519
