use crate::dependency::Dependency;
use crate::dragonruby;
use crate::project_config::ProjectConfig;
use crate::utils::copy_directory;
use log::*;
use std::env;
use std::fs;
use std::io;
use std::path::Path;

pub fn call(matches: &clap::ArgMatches) -> io::Result<()> {
    let current_directory = env::current_dir().unwrap();
    let filename: &str = matches
        .value_of("PATH")
        .unwrap_or_else(|| current_directory.to_str().unwrap());
    let path = Path::new(filename);
    debug!("Project Path: {}", path.to_str().unwrap());

    dragonruby::ensure_smaug_project(path);

    if matches.is_present("package") {
    } else {
        install_from_config(&path)?;
    }

    Ok(())
}

fn install_from_config(path: &Path) -> io::Result<()> {
    let config = ProjectConfig::load(&path.join("Smaug.toml")).unwrap();
    debug!("Smaug Configuration: {:?}", config);

    install_packages(&config, &path)?;
    create_index(&config, &path)?;

    info!("Dependencies installed. Add `require \"smaug.rb\"` to the top of your main.rb.");

    Ok(())
}

fn install_packages(config: &ProjectConfig, path: &Path) -> io::Result<()> {
    trace!("Installing packages");

    for package in config.dependencies.iter() {
        let destination = path.join("smaug").join(package.name.clone().unwrap());

        if destination.exists() {
            debug!(
                "Dependency {} already installed.",
                package.name.clone().unwrap()
            );
        } else {
            trace!("Installing {}", package.name.clone().unwrap());
            let dependency = Dependency::from_config(&package).unwrap();
            let source = dependency.cache();

            trace!(
                "Copying from {} to {}",
                source.to_str().unwrap(),
                destination.to_str().unwrap()
            );
            copy_directory(&source, &destination)?;
        }
    }

    Ok(())
}

fn create_index(config: &ProjectConfig, path: &Path) -> io::Result<()> {
    let mut index = String::new();
    index.push_str("# This file was automatically @generated by Smaug.\n");
    index.push_str("# It is recommended not to manually edit this file.\n\n");

    for package in config.dependencies.iter() {
        let destination = path.join("smaug").join(package.name.clone().unwrap());

        if destination.exists() {
            let package_config = ProjectConfig::load(&destination.join("Smaug.toml")).unwrap();
            debug!("Package Config: {:?}", package_config);

            for require in package_config.package.unwrap().requires.iter() {
                let require_path = format!("smaug/{}/{}", package.name.clone().unwrap(), require);
                index.push_str(format!("require \"{}\"\n", require_path).as_str());
            }
        }
    }

    let index_file = path.join("smaug.rb");
    fs::write(index_file, index)?;
    Ok(())
}
